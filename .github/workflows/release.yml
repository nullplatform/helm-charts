name: Release Charts

on:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      pages: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull latest changes
        run: git pull origin ${GITHUB_REF#refs/heads/}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Create Git Identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Release Process
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running semantic-release"
          OUTPUT=$(npx semantic-release --debug)
          echo "$OUTPUT"
          if echo "$OUTPUT" | grep -q "There are no relevant changes, so no new version is released."; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
      - name: Set up Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - name: Download and package Helm Charts and output to releases directory
        run: |
          for dir in charts/*; do
            helm dependency update "$dir"
            helm package "$dir" -d ./releases
          done
      - name: Generate Helm repository index in releases directory
        run: helm repo index ./releases --url https://nullplatform.github.io/helm-charts
      - name: Push changes to GitHub
        run: |
          git add ./releases
          git commit -m "ci: GIT-0000 Publish new chart version [ci skip]"
          git push origin ${GITHUB_REF#refs/heads/}
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './releases'
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
