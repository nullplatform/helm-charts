{{- if or (eq .Values.global.provider "aks") (eq .Values.global.provider "gke") (eq .Values.global.provider "oke") }}
{{- $secretName := "" }}
{{- if .Values.tls.required  }}
{{- $secretName = required "The 'tls.secretName' field is required" .Values.tls.secretName }}
{{- else }}
{{- $secretName = .Values.tls.secretName | default "" }}
{{- end }}
{{- if not (lookup "v1" "Namespace" "" .Values.namespaces.gateway) }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespaces.gateway }}
  labels:
    name: {{ .Values.namespaces.gateway }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/resource-policy": "keep"
{{- end }}
---
{{- if and .Values.gateways.enabled .Values.gateway.internal.enabled }}
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: {{ .Values.gateway.internal.name }}
  namespace: {{ .Values.namespaces.gateway }}
  annotations:
    {{- if eq .Values.global.provider "aks" }}
    {{- if eq .Values.gateway.internal.loadBalancerType "internal" }}
    service.beta.kubernetes.io/azure-load-balancer-internal: 'true'
    {{- else }}
    service.beta.kubernetes.io/azure-load-balancer-internal: 'false'
    {{- end }}
    service.beta.kubernetes.io/port_443_health-probe_protocol: "tcp"
    {{- else if eq .Values.global.provider "gke" }}
    {{- if eq .Values.gateway.internal.loadBalancerType "internal" }}
    networking.gke.io/load-balancer-type: "Internal"
    {{- else }}
    networking.gke.io/load-balancer-type: "External"
    {{- end }}
    service.beta.kubernetes.io/port_443_health-probe_protocol: "tcp"
    {{- else if eq .Values.global.provider "oke" }}
    {{- if eq .Values.gateway.internal.loadBalancerType "internal" }}
    service.beta.kubernetes.io/oci-load-balancer-internal: "true"
    {{- else }}
    service.beta.kubernetes.io/oci-load-balancer-internal: "false"
    {{- end }}
    service.beta.kubernetes.io/port_443_health-probe_protocol: "tcp"
    {{- else }}
    {{- /* Default annotations for other providers */ -}}
    service.beta.kubernetes.io/port_443_health-probe_protocol: "tcp"
    {{- end }}
    "helm.sh/resource-policy": "keep"
spec:
  gatewayClassName: istio
  {{- with .Values.gateway.internal.addresses }}
  addresses:
    {{- toYaml . | nindent 2 }}
  {{- end }}
  listeners:
  {{- if .Values.gateway.http.enabled }}
    - name: http
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All
  {{- end }}
  {{- if .Values.tls.required }}
    - name: https
      port: 443
      protocol: HTTPS
    {{- if $secretName }}
      tls:
        certificateRefs:
          - group: ''
            kind: Secret
            name: {{ $secretName }}
    {{- end }}
      allowedRoutes:
        namespaces:
          from: All
  {{- end }}

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Values.gateway.internal.name }}
  namespace: {{ .Values.namespaces.gateway }}
spec:
  # Match the generated Deployment by reference
  # Note: Do not use `kind: Gateway`.
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.gateway.internal.name }}-istio
    namespace: {{ .Values.namespaces.gateway }}
  minReplicas: {{ .Values.gateway.internal.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.gateway.internal.autoscaling.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ .Values.gateway.internal.name }}
  namespace: {{ .Values.namespaces.gateway }}

spec:
  maxUnavailable: 50%
  selector:
    # Match the generated Deployment by label
    matchLabels:
      istio.io/gateway-name: {{ .Values.gateway.internal.name }}
---
{{- end }}
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: {{ .Values.gateway.public.name }}
  namespace: {{ .Values.namespaces.gateway }}
  annotations:
    {{- if eq .Values.global.provider "aks" }}
    {{- if eq .Values.gateway.public.loadBalancerType "internal" }}
    service.beta.kubernetes.io/azure-load-balancer-internal: 'true'
    {{- else }}
    service.beta.kubernetes.io/azure-load-balancer-internal: 'false'
    {{- end }}
    service.beta.kubernetes.io/port_443_health-probe_protocol: "tcp"
    {{- else if eq .Values.global.provider "gke" }}
    {{- if eq .Values.gateway.public.loadBalancerType "internal" }}
    networking.gke.io/load-balancer-type: "Internal"
    {{- else }}
    networking.gke.io/load-balancer-type: "External"
    {{- end }}
    service.beta.kubernetes.io/port_443_health-probe_protocol: "tcp"
    {{- else if eq .Values.global.provider "oke" }}
    {{- if eq .Values.gateway.public.loadBalancerType "internal" }}
    service.beta.kubernetes.io/oci-load-balancer-internal: "true"
    {{- else }}
    service.beta.kubernetes.io/oci-load-balancer-internal: "false"
    {{- end }}
    service.beta.kubernetes.io/port_443_health-probe_protocol: "tcp"
    {{- else }}
    {{- /* Default annotations for other providers */ -}}
    service.beta.kubernetes.io/port_443_health-probe_protocol: "tcp"
    {{- end }}
    "helm.sh/resource-policy": "keep"
spec:
  gatewayClassName: istio
  {{- with .Values.gateway.public.addresses }}
  addresses:
    {{- toYaml . | nindent 2 }}
  {{- end }}
  listeners:
  {{- if .Values.gateway.http.enabled }}
    - name: http
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All
  {{- end }}
  {{- if .Values.tls.required }}
    - name: https
      port: 443
      protocol: HTTPS
    {{- if $secretName }}
      tls:
        certificateRefs:
          - group: ''
            kind: Secret
            name: {{ $secretName }}
    {{- end }}
      allowedRoutes:
        namespaces:
          from: All
  {{- end }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Values.gateway.public.name }}
  namespace: {{ .Values.namespaces.gateway }}
spec:
  # Match the generated Deployment by reference
  # Note: Do not use `kind: Gateway`.
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.gateway.public.name }}-istio
    namespace: {{ .Values.namespaces.gateway }}
  minReplicas: {{ .Values.gateway.public.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.gateway.public.autoscaling.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ .Values.gateway.public.name }}
  namespace: {{ .Values.namespaces.gateway }}

spec:
  maxUnavailable: 50%
  selector:
    # Match the generated Deployment by label
    matchLabels:
      istio.io/gateway-name: {{ .Values.gateway.public.name }}
---
{{- end }}
