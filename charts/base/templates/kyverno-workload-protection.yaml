{{- if .Values.kyverno.enabled }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: nullplatform-protect-workloads-from-deletion
  annotations:
    policies.kyverno.io/title: Protect Workload Resources from Deletion
    policies.kyverno.io/category: Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: DaemonSet, Deployment, StatefulSet, Job
    policies.kyverno.io/description: >-
      This policy prevents deletion of workloads unless they are scaled to zero.
spec:
  validationFailureAction: Enforce
  background: false
  rules:
    # Rule 1: Prevent Deployment deletion unless scaled to zero
    - name: block-deployment-deletion-if-not-scaled-to-zero
      match:
        any:
          - resources:
              kinds:
                - Deployment
              namespaceSelector:
                matchExpressions:
                  - key: nullplatform-protection
                    operator: In
                    values: ["enabled"]
      preconditions:
        all:
          - key: "{{ request.operation }}"
            operator: Equal
            value: DELETE
      validate:
        message: "Cannot delete Deployment unless it is scaled to zero."
        deny:
          conditions:
            any:
              - key: "{{ request.object.spec.replicas }}"
                operator: NotEquals
                value: 0

    # Rule 2: Prevent StatefulSet deletion unless scaled to zero
    - name: block-statefulset-deletion-if-not-scaled-to-zero
      match:
        any:
          - resources:
              kinds:
                - StatefulSet
              namespaceSelector:
                matchExpressions:
                  - key: nullplatform-protection
                    operator: In
                    values: ["enabled"]
      preconditions:
        all:
          - key: "{{ request.operation }}"
            operator: Equal
            value: DELETE
      validate:
        message: "Cannot delete StatefulSet unless it is scaled to zero."
        deny:
          conditions:
            any:
              - key: "{{ request.object.spec.replicas }}"
                operator: NotEquals
                value: 0

    # Rule 3: Prevent Job deletion unless parallelism is zero
    - name: block-job-deletion-if-not-scaled-to-zero
      match:
        any:
          - resources:
              kinds:
                - Job
              namespaceSelector:
                matchExpressions:
                  - key: nullplatform-protection
                    operator: In
                    values: ["enabled"]
      preconditions:
        all:
          - key: "{{ request.operation }}"
            operator: Equal
            value: DELETE
      validate:
        message: "Cannot delete Job unless parallelism is set to zero."
        deny:
          conditions:
            any:
              - key: "{{ request.object.spec.parallelism }}"
                operator: NotEquals
                value: 0

    # Rule 4: Always prevent DaemonSet deletion
    - name: block-daemonset-deletion
      match:
        any:
          - resources:
              kinds:
                - DaemonSet
              namespaceSelector:
                matchExpressions:
                  - key: nullplatform-protection
                    operator: In
                    values: ["enabled"]
      preconditions:
        all:
          - key: "{{ request.operation }}"
            operator: Equal
            value: DELETE
      validate:
        message: "DaemonSets cannot be deleted. Scale them down with a node selector first."
        deny: {}
{{- end }}