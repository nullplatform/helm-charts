{{- if .Values.recordingRules.enabled }}
---
# ConfigMap with Prometheus recording rules for enriching Istio metrics with K8s labels
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-recording-rules
  namespace: {{ include "istio-metrics.prometheusNamespace" . }}
  labels:
    prometheus.io/rule: "true"
data:
  istio_enriched_with_k8s_labels.yml: |
    groups:
    - name: istio_enriched_with_k8s_labels
      interval: 15s
      rules:
      # Join Istio requests with K8s pod labels
      - record: np_requests_total_enriched
        expr: |
          label_replace(
            istio_requests_total{source_workload=~"gateway-public-istio|gateway-private-istio"},
            "destination_pod_ip_clean", "$1", "destination_pod_ip", "(.*):.*"
          )
          * on(destination_pod_ip_clean, destination_workload_namespace) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id, destination_pod)
          (
            max by (destination_pod_ip_clean, destination_workload_namespace, account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id, destination_pod) (
              label_replace(
                label_replace(
                  label_replace(
                    k8s_pod_labels_info{application_id!=""},
                    "destination_workload_namespace", "$1", "namespace", "(.*)"
                  ),
                  "destination_pod_ip_clean", "$1", "pod_ip", "(.*)"
                ),
                "destination_pod", "$1", "pod", "(.*)"
              )
            )
          )
      
      # Join Istio request duration buckets with K8s pod labels
      - record: np_request_duration_milliseconds_bucket_enriched
        expr: |
          label_replace(
            istio_request_duration_milliseconds_bucket{source_workload=~"gateway-public-istio|gateway-private-istio"},
            "destination_pod_ip_clean", "$1", "destination_pod_ip", "(.*):.*"
          )
          * on(destination_pod_ip_clean, destination_workload_namespace) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id, destination_pod)
          (
            max by (destination_pod_ip_clean, destination_workload_namespace, account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id, destination_pod) (
              label_replace(
                label_replace(
                  label_replace(
                    k8s_pod_labels_info{application_id!=""},
                    "destination_workload_namespace", "$1", "namespace", "(.*)"
                  ),
                  "destination_pod_ip_clean", "$1", "pod_ip", "(.*)"
                ),
                "destination_pod", "$1", "pod", "(.*)"
              )
            )
          )
      
      # Join Istio request duration sum with K8s pod labels
      - record: np_request_duration_milliseconds_sum_enriched
        expr: |
          label_replace(
            istio_request_duration_milliseconds_sum{source_workload=~"gateway-public-istio|gateway-private-istio"},
            "destination_pod_ip_clean", "$1", "destination_pod_ip", "(.*):.*"
          )
          * on(destination_pod_ip_clean, destination_workload_namespace) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id, destination_pod)
          (
            max by (destination_pod_ip_clean, destination_workload_namespace, account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id, destination_pod) (
              label_replace(
                label_replace(
                  label_replace(
                    k8s_pod_labels_info{application_id!=""},
                    "destination_workload_namespace", "$1", "namespace", "(.*)"
                  ),
                  "destination_pod_ip_clean", "$1", "pod_ip", "(.*)"
                ),
                "destination_pod", "$1", "pod", "(.*)"
              )
            )
          )
      
      # Join Istio request duration count with K8s pod labels
      - record: np_request_duration_milliseconds_count_enriched
        expr: |
          label_replace(
            istio_request_duration_milliseconds_count{source_workload=~"gateway-public-istio|gateway-private-istio"},
            "destination_pod_ip_clean", "$1", "destination_pod_ip", "(.*):.*"
          )
          * on(destination_pod_ip_clean, destination_workload_namespace) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id, destination_pod)
          (
            max by (destination_pod_ip_clean, destination_workload_namespace, account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id, destination_pod) (
              label_replace(
                label_replace(
                  label_replace(
                    k8s_pod_labels_info{application_id!=""},
                    "destination_workload_namespace", "$1", "namespace", "(.*)"
                  ),
                  "destination_pod_ip_clean", "$1", "pod_ip", "(.*)"
                ),
                "destination_pod", "$1", "pod", "(.*)"
              )
            )
          )

    - name: container_resources_enriched_with_k8s_labels
      interval: 15s
      rules:
      # CPU usage rate enriched with pod labels
      - record: np_container_cpu_usage_rate_enriched
        expr: |
          rate(container_cpu_usage_seconds_total{container!="", container!="POD"}[5m])
          * on(namespace, pod) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id)
          k8s_pod_labels_info

      # CPU usage percentage (vs limits) enriched with pod labels
      - record: np_container_cpu_usage_percent_enriched
        expr: |
          (
            rate(container_cpu_usage_seconds_total{container!="", container!="POD"}[5m])
            / on(namespace, pod, container) group_left()
            container_spec_cpu_quota{container!="", container!="POD"}
          ) * 100
          * on(namespace, pod) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id)
          k8s_pod_labels_info

      # Memory usage enriched with pod labels
      - record: np_container_memory_usage_bytes_enriched
        expr: |
          container_memory_usage_bytes{container!="", container!="POD"}
          * on(namespace, pod) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id)
          k8s_pod_labels_info

      # Memory usage percentage (vs limits) enriched with pod labels
      - record: np_container_memory_usage_percent_enriched
        expr: |
          (
            container_memory_usage_bytes{container!="", container!="POD"}
            / on(namespace, pod, container) group_left()
            container_spec_memory_limit_bytes{container!="", container!="POD"}
          ) * 100
          * on(namespace, pod) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id)
          k8s_pod_labels_info

      # Container restarts enriched with pod labels
      - record: np_container_restarts_enriched
        expr: |
          increase(kube_pod_container_status_restarts_total[1h])
          * on(namespace, pod) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id)
          k8s_pod_labels_info

      # Pod ready status enriched
      - record: np_pod_ready_enriched
        expr: |
          kube_pod_status_ready{condition="true"}
          * on(namespace, pod) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id)
          k8s_pod_labels_info

      # Pod phase enriched (Running, Pending, Failed, etc)
      - record: np_pod_phase_enriched
        expr: |
          kube_pod_status_phase
          * on(namespace, pod) group_left(account, account_id, application, application_id, deployment_id, scope, scope_id, namespace_id)
          k8s_pod_labels_info
{{- end }}